import{_ as e,c as i,a0 as p,o as t}from"./chunks/framework.C87fWP1O.js";const u=JSON.parse('{"title":"窗体配置类(WinConfig)说明","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md"}'),r={name:"config.md"};function o(n,a,h,l,m,s){return t(),i("div",null,a[0]||(a[0]=[p('<h1 id="窗体配置类-winconfig-说明" tabindex="-1">窗体配置类(WinConfig)说明 <a class="header-anchor" href="#窗体配置类-winconfig-说明" aria-label="Permalink to &quot;窗体配置类(WinConfig)说明&quot;">​</a></h1><h2 id="appname-应用程序名称" tabindex="-1">AppName-应用程序名称 <a class="header-anchor" href="#appname-应用程序名称" aria-label="Permalink to &quot;AppName-应用程序名称&quot;">​</a></h2><p>类型：string</p><p>可空：是</p><p>默认：&#39;&#39;</p><p>说明：</p><h2 id="icon-应用程序图标" tabindex="-1">Icon-应用程序图标 <a class="header-anchor" href="#icon-应用程序图标" aria-label="Permalink to &quot;Icon-应用程序图标&quot;">​</a></h2><p>类型：string</p><p>可空：是</p><p>默认：&#39;&#39;</p><p>说明：</p><h2 id="apptype-应用程序类型" tabindex="-1">AppType-应用程序类型 <a class="header-anchor" href="#apptype-应用程序类型" aria-label="Permalink to &quot;AppType-应用程序类型&quot;">​</a></h2><p>类型：WebAppType</p><p>可空：否</p><p>默认：WebAppType.RawString</p><p>说明：</p><h2 id="url-地址" tabindex="-1">Url-地址 <a class="header-anchor" href="#url-地址" aria-label="Permalink to &quot;Url-地址&quot;">​</a></h2><p>类型：string</p><p>可空：是</p><p>默认：&#39;&#39;</p><p>说明：仅当<a href="#apptype">AppType</a>为Http/Static时有效</p><h2 id="rawstring-字符串" tabindex="-1">RawString-字符串 <a class="header-anchor" href="#rawstring-字符串" aria-label="Permalink to &quot;RawString-字符串&quot;">​</a></h2><p>类型：string</p><p>可空：是</p><p>默认：&#39;&#39;</p><p>说明：仅当<a href="#apptype">AppType</a>为RawString时有效</p><h2 id="blazorcomponent-blazor组件" tabindex="-1">BlazorComponent-Blazor组件 <a class="header-anchor" href="#blazorcomponent-blazor组件" aria-label="Permalink to &quot;BlazorComponent-Blazor组件&quot;">​</a></h2><p>类型：Type</p><p>可空：是</p><p>默认：null</p><p>说明：仅当<a href="#apptype">AppType</a>为Blazor时有效</p><h2 id="chromeless-无边框" tabindex="-1">Chromeless-无边框 <a class="header-anchor" href="#chromeless-无边框" aria-label="Permalink to &quot;Chromeless-无边框&quot;">​</a></h2><p>类型：bool</p><p>可空：是</p><p>默认：false</p><p>说明：</p><h2 id="debug-调试模式" tabindex="-1">Debug-调试模式 <a class="header-anchor" href="#debug-调试模式" aria-label="Permalink to &quot;Debug-调试模式&quot;">​</a></h2><p>类型：bool</p><p>可空：是</p><p>默认：false</p><p>说明：</p><h2 id="topmost-置顶" tabindex="-1">TopMost-置顶 <a class="header-anchor" href="#topmost-置顶" aria-label="Permalink to &quot;TopMost-置顶&quot;">​</a></h2><p>类型：bool</p><p>可空：是</p><p>默认：false</p><p>说明：</p><h2 id="height-width-窗口宽高" tabindex="-1">Height/Width-窗口宽高 <a class="header-anchor" href="#height-width-窗口宽高" aria-label="Permalink to &quot;Height/Width-窗口宽高&quot;">​</a></h2><p>类型：int/int</p><p>可空：是</p><p>默认：600/800</p><p>说明：</p><h2 id="size-窗口大小" tabindex="-1">Size-窗口大小 <a class="header-anchor" href="#size-窗口大小" aria-label="Permalink to &quot;Size-窗口大小&quot;">​</a></h2><p>类型：Size</p><p>可空：是</p><p>默认：null</p><p>说明：配置此属性会覆盖Height/Width属性</p><h2 id="resizeable-大小调整" tabindex="-1">ResizeAble-大小调整 <a class="header-anchor" href="#resizeable-大小调整" aria-label="Permalink to &quot;ResizeAble-大小调整&quot;">​</a></h2><p>类型：bool</p><p>可空：是</p><p>默认：true</p><p>说明：</p><h2 id="center-窗口居中" tabindex="-1">Center-窗口居中 <a class="header-anchor" href="#center-窗口居中" aria-label="Permalink to &quot;Center-窗口居中&quot;">​</a></h2><p>类型：bool</p><p>可空：是</p><p>默认：true</p><p>说明：</p><h2 id="left-top-窗口位置" tabindex="-1">Left/Top-窗口位置 <a class="header-anchor" href="#left-top-窗口位置" aria-label="Permalink to &quot;Left/Top-窗口位置&quot;">​</a></h2><p>类型：int/int</p><p>可空：是</p><p>默认：0/0</p><p>说明：仅当<a href="#center">Center</a>为false时有效</p><h2 id="minimumheigh-minimumwidth-最小宽高" tabindex="-1">MinimumHeigh/MinimumWidth-最小宽高 <a class="header-anchor" href="#minimumheigh-minimumwidth-最小宽高" aria-label="Permalink to &quot;MinimumHeigh/MinimumWidth-最小宽高&quot;">​</a></h2><p>类型：int/int</p><p>可空：是</p><p>默认：0/0</p><p>说明：0表示不限制</p><h2 id="minimumsize-窗口最小尺寸" tabindex="-1">MinimumSize-窗口最小尺寸 <a class="header-anchor" href="#minimumsize-窗口最小尺寸" aria-label="Permalink to &quot;MinimumSize-窗口最小尺寸&quot;">​</a></h2><p>类型：Size</p><p>可空：是</p><p>默认：null</p><p>说明：配置此属性会覆盖MinimumHeigh/MinimumWidth属性</p><h2 id="maximumheigh-maximumwidth-最大宽高" tabindex="-1">MaximumHeigh/MaximumWidth-最大宽高 <a class="header-anchor" href="#maximumheigh-maximumwidth-最大宽高" aria-label="Permalink to &quot;MaximumHeigh/MaximumWidth-最大宽高&quot;">​</a></h2><p>类型：int/int</p><p>可空：是</p><p>默认：0/0</p><p>说明：0表示不限制</p><h2 id="maximumsize-窗口最大尺寸" tabindex="-1">MaximumSize-窗口最大尺寸 <a class="header-anchor" href="#maximumsize-窗口最大尺寸" aria-label="Permalink to &quot;MaximumSize-窗口最大尺寸&quot;">​</a></h2><p>类型：Size</p><p>可空：是</p><p>默认：null</p><p>说明：配置此属性会覆盖MaximumHeigh/MaximumWidth属性</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-label="Permalink to &quot;补充说明&quot;">​</a></h2><p><strong>当然，如果不想使用WinConfig类，可以直接实例化无参KirinApp构造函数，然后通过KirinApp的属性或者设置属性的方法来配置窗口，属性名称和WinConfig一致，方法会在属性前加上Set/Is/Use，例如：SetAppType,IsDebug,UseRawString等。</strong></p><p>注：0.0.1-bate后，修改属性的方法前缀会统一改成Set，方法可以链式调用，KirinApp().SetAppName(&quot;1&quot;).SetIcon(&quot;logo.ico&quot;)。</p><p>注：这些属性和方法，必须在创建窗口前调用，否则无效，如果需要在创建窗口后调用，请查看<a href="/KirinApp/doc/window.html">窗体属性API</a></p>',95)]))}const c=e(r,[["render",o]]);export{u as __pageData,c as default};
