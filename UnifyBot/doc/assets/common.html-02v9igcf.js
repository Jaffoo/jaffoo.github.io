import{_ as t,o as d,c as e,e as r}from"./app-0NPKodNv.js";const n={},a=r(`<h2 id="机器人api" tabindex="-1"><a class="header-anchor" href="#机器人api" aria-hidden="true">#</a> 机器人API</h2><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code>Connect connect = new(&quot;localhost&quot;, 3001, 3000);
Bot bot = new(connect);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><tr><th>名称</th><th>类型</th><th>使用</th><th>参数</th><th>说明</th></tr><tr><td>好友</td><td>属性</td><td>bot.Friends</td><td>无</td><td>无</td></tr><tr><td>群</td><td>属性</td><td>bot.Groups</td><td>无</td><td>无</td></tr><tr><td>onebot版本</td><td>属性</td><td>bot.Version</td><td>无</td><td>无</td></tr><tr><td>onebot状态</td><td>属性</td><td>bot.Status</td><td>无</td><td>无</td></tr><tr><td>检查是否可以发送语音</td><td>方法</td><td>bot.CanSendRecord</td><td>无</td><td>无</td></tr><tr><td>检查是否可以发送图片</td><td>方法</td><td>bot.CanSendImage</td><td>无</td><td>无</td></tr><tr><td>重启</td><td>方法</td><td>bot.Restart</td><td>delay：延迟重启</td><td>无</td></tr><tr><td>发送私聊消息</td><td>方法</td><td>bot.SendPrivateMessage</td><td>qq/friend：qq号/好友对象；msg：消息内容</td><td>存在重载，自行查看</td></tr><tr><td>发送群聊消息</td><td>方法</td><td>bot.SendGroupMessage</td><td>groupQQ/group：qq群号/群对象；msg：消息内容</td><td>存在重载，自行查看</td></tr><tr><td>扩展api方法</td><td>方法</td><td>bot.GetAsync</td><td>apiEndpoint：请求端点；paramStr：请求参数字符串（url格式拼接好）</td><td>onebot实现框架的扩展api通用调用方法；存在重载，自行查看</td></tr><tr><td>扩展api方法</td><td>方法</td><td>bot.PostAsync</td><td>apiEndpoint：请求端点；data：请求body数据(json字符串)</td><td>onebot实现框架的扩展api通用调用方法；存在重载，自行查看</td></tr><tr><td>资源释放</td><td>方法</td><td>bot.Dispose</td><td>无</td><td>无</td></tr></table><h2 id="群对象" tabindex="-1"><a class="header-anchor" href="#群对象" aria-hidden="true">#</a> 群对象</h2><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code>Connect connect = new(&quot;localhost&quot;, 3001, 3000,&quot;111&quot;);
Bot bot = new(connect);
var group = bot.Groups[0];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><tr><th>名称</th><th>类型</th><th>使用</th><th>参数</th><th>说明</th></tr><tr><td>群成员列表</td><td>属性</td><td>group.Members</td><td>无</td><td>[群成员对象](#群成员对象)</td></tr><tr><td>群荣誉</td><td>属性</td><td>group.Honor</td><td>无</td><td>无</td></tr><tr><td>发送消息</td><td>方法</td><td>group.SendMessage</td><td>msg：消息内容</td><td>存在重载，自行查看</td></tr><tr><td>全体禁言</td><td>方法</td><td>group.EnableGroupBan</td><td>无</td><td>无</td></tr><tr><td>取消全体禁言</td><td>方法</td><td>group.DisableGroupBan</td><td>无</td><td>无</td></tr><tr><td>允许匿名聊天</td><td>方法</td><td>group.EnableAnonymous</td><td>无</td><td>无</td></tr><tr><td>禁止匿名聊天</td><td>方法</td><td>group.DisableAnonymous</td><td>无</td><td>无</td></tr><tr><td>设置群名</td><td>方法</td><td>group.SetGroupName</td><td>name：新群名</td><td>无</td></tr><tr><td>退出群聊</td><td>方法</td><td>group.LeaveGroup</td><td>dissolve：是否解散，如果登录号是群主，则仅在此项为 true 时能够解散</td><td>无</td></tr></table><h2 id="群成员对象" tabindex="-1"><a class="header-anchor" href="#群成员对象" aria-hidden="true">#</a> 群成员对象</h2><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code>Connect connect = new(&quot;localhost&quot;, 3001, 3000,&quot;111&quot;);
Bot bot = new(connect);
var member = bot.Groups[0].Members[0];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><tr><th>名称</th><th>类型</th><th>使用</th><th>参数</th><th>说明</th></tr><tr><td>设置群组专属头衔</td><td>方法</td><td>member.SetTitle</td><td>title：专属头衔，不填或空字符串表示删除专属头衔；time：专属头衔有效期，单位秒，-1表示永久</td><td>无</td></tr><tr><td>成员在群的昵称</td><td>方法</td><td>member.SetNickname</td><td>name：成员在群的昵称，不填或空字符串表示删除昵称，使用qq昵称</td><td>无</td></tr><tr><td>任命管理</td><td>方法</td><td>member.SetAdmin</td><td>无</td><td>无</td></tr><tr><td>卸任管理</td><td>方法</td><td>member.RemoveAdmin</td><td>无</td><td>无</td></tr><tr><td>禁言</td><td>方法</td><td>member.Ban</td><td>time?：禁言时间，单位秒</td><td>无</td></tr><tr><td>取消禁言</td><td>方法</td><td>member.CancelBan</td><td>无</td><td>无</td></tr><tr><td>踢出群聊</td><td>方法</td><td>member.Kick</td><td>reject?：拒绝此人的加群请求</td><td>无</td></tr><tr><td>点赞</td><td>方法</td><td>member.Like</td><td>times?：次数</td><td>非好友可能操作失败</td></tr><tr><td>发送消息</td><td>方法</td><td>member.SendMessage</td><td>msg：消息内容</td><td>非好友大概率发送失败；存在重载</td></tr></table><h2 id="好友对象" tabindex="-1"><a class="header-anchor" href="#好友对象" aria-hidden="true">#</a> 好友对象</h2><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code>Connect connect = new(&quot;localhost&quot;, 3001, 3000,&quot;111&quot;);
Bot bot = new(connect);
var friend = bot.Friends[0];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><tr><th>名称</th><th>类型</th><th>使用</th><th>参数</th><th>说明</th></tr><tr><td>发送消息</td><td>方法</td><td>group.SendMessage</td><td>msg：消息内容</td><td>存在重载，自行查看</td></tr><tr><td>点赞</td><td>方法</td><td>group.Like</td><td>times?：次数</td><td>存在重载，自行查看</td></tr></table><h2 id="群聊对象" tabindex="-1"><a class="header-anchor" href="#群聊对象" aria-hidden="true">#</a> 群聊对象</h2><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code> bot.MessageReceived.OfType&lt;GroupReceiver&gt;().Subscribe(gr =&gt;
 {

 });
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><tr><th>名称</th><th>类型</th><th>使用</th><th>参数</th><th>说明</th></tr><tr><td>群消息</td><td>属性</td><td>gr.Group</td><td>无</td><td>[群对象](#群对象)</td></tr><tr><td>发送消息</td><td>方法</td><td>gr.SendMessage</td><td>msg：消息内容</td><td>存在重载，自行查看</td></tr><tr><td>撤回消息</td><td>方法</td><td>gr.Recall</td><td>无</td><td>无</td></tr></table><h2 id="框架扩展api" tabindex="-1"><a class="header-anchor" href="#框架扩展api" aria-hidden="true">#</a> 框架扩展API</h2><p>onebot机器人实现框架会有一些自己的API（非onebot标准），此框架由于是按照onebot标准实现的，所以不提供也不会支持这些扩展api，不过此框架提供了<a href="#%E6%9C%BA%E5%99%A8%E4%BA%BAapi">机器人api</a>中的扩展方法，可以调用这些非标准API。例如：</p><div class="language-C# line-numbers-mode" data-ext="C#"><pre class="language-C#"><code>bot.GetAsync(&quot;upload_file&quot;,&quot;?path=xxxxx&quot;);
bot.GetAsync&lt;FileInfo&gt;(&quot;upload_file&quot;,&quot;?path=xxxxx&quot;);
bot.PostAsync(&quot;upload_file&quot;,new {path=&quot;xxx&quot;}.ToJsonStr());
bot.PostAsync&lt;FileInfo&gt;(&quot;upload_file&quot;,new {path=&quot;xxx&quot;}.ToJsonStr());
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[a];function i(s,l){return d(),e("div",null,o)}const c=t(n,[["render",i],["__file","common.html.vue"]]);export{c as default};
